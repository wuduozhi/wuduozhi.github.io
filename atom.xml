<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>只为不凡而来</title>
  <subtitle>小智的世界</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-04-14T13:03:32.486Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>wuduozhi</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>ARST.md</title>
    <link href="http://yoursite.com/2019/04/15/ARST%20%E7%AC%AC%E4%B8%80%E5%91%A8/"/>
    <id>http://yoursite.com/2019/04/15/ARST 第一周/</id>
    <published>2019-04-14T20:57:17.000Z</published>
    <updated>2019-04-14T13:03:32.486Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Algorithm"><a href="#Algorithm" class="headerlink" title="Algorithm"></a>Algorithm</h1><p><del>For：编程训练和学习</del></p>
<p><a href="https://leetcode.com/problems/median-of-two-sorted-arrays/" target="_blank" rel="external">Leetcode 4. Median of Two Sorted Arrays</a>  给定连个有序数组，求合并后的中位数。</p>
<h3 id="解法一-O-n-复杂度"><a href="#解法一-O-n-复杂度" class="headerlink" title="解法一  O(n) 复杂度"></a>解法一  O(n) 复杂度</h3><p>对于 O(n) 复杂度的解法，就是先合并两个数组为一个有序数组，然后在找中位数，合并过程的复杂度是 O(n)。</p>
<p>代码如下：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line">class Solution:</div><div class="line">    def findMedianSortedArrays(self, nums1: List[int], nums2: List[int]) -&gt; float:</div><div class="line">        merge = self.merge(nums1,nums2)</div><div class="line">        length = len(merge)</div><div class="line"></div><div class="line">        if (length % 2) == 1:</div><div class="line">            return merge[length // 2]</div><div class="line">        else:</div><div class="line">            left ,right = merge[length // 2 - 1],merge[length // 2]</div><div class="line"></div><div class="line">            return (left + right) /2</div><div class="line"></div><div class="line">    </div><div class="line">    def merge(self,a,b):</div><div class="line">        i,j = 0,0</div><div class="line">        result = []</div><div class="line">        while i&lt;len(a) or j&lt;len(b):</div><div class="line">            if i &lt; len(a) and j &lt; len(b):</div><div class="line">                if a[i] &lt; b[j]:</div><div class="line">                    result.append(a[i])</div><div class="line">                    i += 1</div><div class="line">                else:</div><div class="line">                    result.append(b[j])</div><div class="line">                    j += 1</div><div class="line">            else:</div><div class="line">                if i &lt; len(a):</div><div class="line">                    result.append(a[i])</div><div class="line">                    i += 1</div><div class="line">                else:</div><div class="line">                    result.append(b[j])</div><div class="line">                    j += 1</div><div class="line"></div><div class="line">        return result</div></pre></td></tr></table></figure>
<h3 id="解法二-O-logn-复杂度"><a href="#解法二-O-logn-复杂度" class="headerlink" title="解法二 O(logn) 复杂度"></a>解法二 O(logn) 复杂度</h3><p>自己一下子也没想出来，看了一下讨论，发现用 <strong>二分查找</strong>  的方法也能解决，复杂度为 O(logn) 。参考的这个 [Share my O(log(min(m,n)) solution with explanation]<code>(https://leetcode.com/problems/median-of-two-sorted-arrays/discuss/2481/Share-my-O(log(min(mn))-solution-with-explanation)</code> 。</p>
<p>代码如下：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div></pre></td><td class="code"><pre><div class="line">class Solution:</div><div class="line">    def findMedianSortedArrays(self, nums1: List[int], nums2: List[int]) -&gt; float:</div><div class="line">        return self.median(nums1,nums2)</div><div class="line"></div><div class="line">    </div><div class="line">    def median(self,A, B):</div><div class="line">        m, n = len(A), len(B)</div><div class="line">        if m &gt; n:</div><div class="line">            A, B, m, n = B, A, n, m</div><div class="line">        if n == 0:</div><div class="line">            raise ValueError</div><div class="line"></div><div class="line">        imin, imax, half_len = 0, m, (m + n + 1) // 2</div><div class="line">        while imin &lt;= imax:</div><div class="line">            i = (imin + imax) // 2</div><div class="line">            j = half_len - i</div><div class="line">            if i &lt; m and B[j-1] &gt; A[i]:</div><div class="line">                # i is too small, must increase it</div><div class="line">                imin = i + 1</div><div class="line">            elif i &gt; 0 and A[i-1] &gt; B[j]:</div><div class="line">                # i is too big, must decrease it</div><div class="line">                imax = i - 1</div><div class="line">            else:</div><div class="line">                # i is perfect</div><div class="line"></div><div class="line">                if i == 0: max_of_left = B[j-1]</div><div class="line">                elif j == 0: max_of_left = A[i-1]</div><div class="line">                else: max_of_left = max(A[i-1], B[j-1])</div><div class="line"></div><div class="line">                if (m + n) % 2 == 1:</div><div class="line">                    return max_of_left</div><div class="line"></div><div class="line">                if i == m: min_of_right = B[j]</div><div class="line">                elif j == n: min_of_right = A[i]</div><div class="line">                else: min_of_right = min(A[i], B[j])</div><div class="line"></div><div class="line">                return (max_of_left + min_of_right) / 2.0</div></pre></td></tr></table></figure>
<h1 id="Review"><a href="#Review" class="headerlink" title="Review"></a>Review</h1><p><del>For：Learning English</del></p>
<p><a href="https://www.ultravioletsoftware.com/single-post/2017/03/23/An-introduction-into-the-WSGI-ecosystem" target="_blank" rel="external">An introduction into the WSGI ecosystem</a></p>
<p>这周参加了一场面试，面试官的一个问题：在部署 Python 应用的时候，为什么需要用到 uWSGI？Flask 框架里不是有内嵌的 Web 服务器吗？</p>
<p>说实话，自己确实没有想过这个问题，觉得别人都是这样部署的，自己也应该这样部署。这犯了大忌了，学技术，我们应该首先知道这门技术解决了什么问题？然后在深入研究是如何解决的？在最后思考这样解决有没有什么缺点、会不会引入新的问题？要有自己的思考。</p>
<p>说到文章，总的讲述了 WSGI，uWSGI，uwsgi 这三个看起来很像，但是却有着本质上的区别的三个名词。</p>
<ul>
<li><strong><em>WSGI*</em></strong> stands for <em><a href="https://en.wikipedia.org/wiki/Web_Server_Gateway_Interface" target="_blank" rel="external">Web Server Gateway Interface</a></em> and it’s a spec for a software interface between a web server and a python application.  *简单讲，WSGI 是一种网关协议，用于 Web Server 与 python 程序的通信。</li>
<li><a href="http://uwsgi-docs.readthedocs.io/en/latest/index.html" target="_blank" rel="external">uWSGI</a><em> is a popular web server that implements the WSGI standard. </em>用人话讲，uWSGI 是一个正儿八经的 Web 服务器，与 Nginx 是同一种东西，不过跟 Nginx 比起来，稍占下风。</li>
<li><em>So we know WSGI is a software spec, uWSGI is a server, so what the hell is uwsgi? When it’s spelled using all <strong>lowercase letters</strong>, it refers to a binary protocol for connecting the uWSGI server to other applications. </em>全部都是小写字母组成的名词 <strong>uwsgi </strong>是一种二进制协议，是 uWSGI 与其他应用程序通信的协议。</li>
</ul>
<p>一图胜前言，看下面这张图就明白了：</p>
<p><img src="https://uploader.shimo.im/f/KmF8y3hYTE8nbjHg.png!thumbnail" alt="图片"></p>
<h1 id="Tip"><a href="#Tip" class="headerlink" title="Tip"></a>Tip</h1><p><del>For：总结归纳学习中遇到的知识点</del></p>
<p>这一周主要研究了 Web 安全相关的 SQL 注入漏洞。之前也了解过 SQL 注入的攻击，知道 SQL 注入攻击会有数据安全，但是没深入了解与实践过，不知道造成的影响有多严重。</p>
<p>这一次结合<a href="http://www.dvwa.co.uk/" target="_blank" rel="external"> DVWA</a> 这个 Application 实践了一波，实践的同时，参考了：<a href="https://pentestlab.blog/2012/09/18/sql-injection-exploitation-dvwa/" target="_blank" rel="external">SQL Injection Exploitation – DVWA</a> 这篇博客。</p>
<p>SQL Injection 攻击的产生是由于开发者编码的不严谨，相信用户的输入是符合预期的，但是这往往是错的，<del>用户不一定都是好用户</del>。</p>
<p><img src="https://uploader.shimo.im/f/SilQNchiKEQfnGic.png!thumbnail" alt="图片"></p>
<p>上面的代码实例中，接收用户的输入，不做任何验证，拼接成想要查询的 SQL 查询，然后交给数据库服务器执行。以上代码能安全无误的工作的前提是：<strong>用户的输入符合我们的设想，即 id。</strong>但是如果用户输入的是  <strong>0’ or 1=1’</strong> 呢？</p>
<p>那这样的话，最终的 SQL 语句就是：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">SELECT first_name, last_name FROM users WHERE user_id = ‘1’ or 1=1;</div></pre></td></tr></table></figure>
<p>代码原本的逻辑就改变了，现在能查询出数据表里所有的数据了。</p>
<p>如果只是这样还好，如果 “用户” 是个高手，结合 union 关键字，就能做很多事情了…比如：</p>
<h3 id="查看数据库版本"><a href="#查看数据库版本" class="headerlink" title="查看数据库版本"></a>查看数据库版本</h3><ul>
<li>输入 <strong>‘ union select 1,@@version#</strong></li>
</ul>
<p><img src="https://uploader.shimo.im/f/bhE397Iq4E8rXhlv.png!thumbnail" alt="图片"></p>
<h3 id="查看-hostname"><a href="#查看-hostname" class="headerlink" title="查看 hostname"></a>查看 hostname</h3><p><img src="https://uploader.shimo.im/f/EULpAJvuxX86WLLu.png!thumbnail" alt="图片"></p>
<h3 id="查看当前数据库连接用户名"><a href="#查看当前数据库连接用户名" class="headerlink" title="查看当前数据库连接用户名"></a>查看当前数据库连接用户名</h3><p><img src="https://uploader.shimo.im/f/uswLLTRFQwsojRQt.png!thumbnail" alt="图片"></p>
<h3 id="查看当前使用的数据库"><a href="#查看当前使用的数据库" class="headerlink" title="查看当前使用的数据库"></a>查看当前使用的数据库</h3><p><img src="https://uploader.shimo.im/f/9cXY1ddyB68bqwlQ.png!thumbnail" alt="图片"></p>
<h3 id="查看当前数据库服务器的所有数据库"><a href="#查看当前数据库服务器的所有数据库" class="headerlink" title="查看当前数据库服务器的所有数据库"></a>查看当前数据库服务器的所有数据库</h3><p><img src="https://uploader.shimo.im/f/9XRVnEHuKVE6eSbt.png!thumbnail" alt="图片"></p>
<h3 id="查看某一个数据库里面的所有表"><a href="#查看某一个数据库里面的所有表" class="headerlink" title="查看某一个数据库里面的所有表"></a>查看某一个数据库里面的所有表</h3><p><img src="https://uploader.shimo.im/f/7dK8XLmx4fgjxQQq.png!thumbnail" alt="图片"></p>
<h3 id="查看其他表的信息"><a href="#查看其他表的信息" class="headerlink" title="查看其他表的信息"></a>查看其他表的信息</h3><p><img src="https://uploader.shimo.im/f/wASX4wwa5MMsQCg1.png!thumbnail" alt="图片"></p>
<h1 id="Share"><a href="#Share" class="headerlink" title="Share"></a>Share</h1><p><del>For：有自己的观点</del></p>
<p>大三下学期了，半只脚踏在社会了，开始找实习了，就记录下自己近期面试的一些随（tu）想(cao) 吧。</p>
<h3 id="面试是平等沟通交流的过程"><a href="#面试是平等沟通交流的过程" class="headerlink" title="面试是平等沟通交流的过程"></a>面试是平等沟通交流的过程</h3><p>其实不少人把面试当成是一种考试，一种跟在学校一样的考试，只有对与错。在我看来，面试是一个平等交流的过程，在这个过程中，面试官与应聘者通过真诚的沟通，面试官可以发现应聘者的优点，应聘者也能发挥自己的优点。</p>
<p>对于技术面试，很多人会怕面试官会问到一些我们不懂的技术点，就像考试一样，害怕老师考我们没复习到的地方。不过，这毕竟不是考试。这么多技术点，我们当然是无法全部掌握的，不过如果我们能做到，对自己接触到的技术，能有深层次的理解，让面试官感觉到你是一个懂得学习的人。做到了这一点，也就是让面试官发现了你的优点：懂得学习，那么对于其他的技术点，也能很快通过学习掌握。</p>
<p>同时，很多面试官，对于某些问题，总会打破砂锅问到底，这也是面试官想通过追问的方式，来挖掘应聘者的优点，是不是会深入技术点的本质，不仅懂得用，还能知道为什么。</p>
<h3 id="关于面经"><a href="#关于面经" class="headerlink" title="关于面经"></a>关于面经</h3><p>很多人会去看面经，觉得面经是葵花宝典，面试前，看一看，就像在学校考试前一夜，看看必考题。</p>
<p>面经可以看，可以让我们有一个参考，知道技术重点是什么，同时，也能找到自己欠缺什么，但面经，毕竟是别人写的，是别人的理解，不是我们自己的。这个，我们还是要有自己的思考，这样，在面试的时候，才能更加自信、从容。</p>
<h3 id="关于面试结果"><a href="#关于面试结果" class="headerlink" title="关于面试结果"></a>关于面试结果</h3><p>面试通过与否，有很大的不确定性。不像在学校考试，只要我们答对了，肯定能得分。为什么有很大的不确定行呢？因为你无法知道给你面试的面试官的性格、对优秀的标准、考察标准…这些都因人而异。不过，如果有实力，这种情况还是很少发生。</p>
<p>最后，面试通过，开心庆祝一下；不通过，也不要灰心，不是自己不行，做一下复盘，是一个学习的过程。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Algorithm&quot;&gt;&lt;a href=&quot;#Algorithm&quot; class=&quot;headerlink&quot; title=&quot;Algorithm&quot;&gt;&lt;/a&gt;Algorithm&lt;/h1&gt;&lt;p&gt;&lt;del&gt;For：编程训练和学习&lt;/del&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;htt
    
    </summary>
    
    
      <category term="ARST" scheme="http://yoursite.com/tags/ARST/"/>
    
  </entry>
  
  <entry>
    <title>数据结构|二叉树</title>
    <link href="http://yoursite.com/2018/12/12/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-%E4%BA%8C%E5%8F%89%E6%A0%91/"/>
    <id>http://yoursite.com/2018/12/12/数据结构-二叉树/</id>
    <published>2018-12-11T17:16:40.000Z</published>
    <updated>2018-12-11T09:21:24.666Z</updated>
    
    <content type="html"><![CDATA[<h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><ul>
<li><a href="https://mp.weixin.qq.com/s/ONKJyusGCIE2ctwT9uLv9g" target="_blank" rel="external">坐下，这些都是二叉树的基本操作</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;参考&quot;&gt;&lt;a href=&quot;#参考&quot; class=&quot;headerlink&quot; title=&quot;参考&quot;&gt;&lt;/a&gt;参考&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/ONKJyusGCIE2ctwT9uLv9g&quot; targ
    
    </summary>
    
      <category term="DataStruct" scheme="http://yoursite.com/categories/DataStruct/"/>
    
    
      <category term="DataStruct" scheme="http://yoursite.com/tags/DataStruct/"/>
    
  </entry>
  
  <entry>
    <title>python|python中的ThreadLocal变量</title>
    <link href="http://yoursite.com/2018/12/05/python-python%E4%B8%AD%E7%9A%84ThreadLocal%E5%8F%98%E9%87%8F/"/>
    <id>http://yoursite.com/2018/12/05/python-python中的ThreadLocal变量/</id>
    <published>2018-12-04T21:38:50.000Z</published>
    <updated>2018-12-04T14:19:39.585Z</updated>
    
    <content type="html"><![CDATA[<h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><ul>
<li><a href="https://selfboot.cn/2016/08/22/threadlocal_overview/" target="_blank" rel="external">深入理解Python中的ThreadLocal变量（上）</a></li>
<li><a href="https://selfboot.cn/2016/08/26/threadlocal_implement/" target="_blank" rel="external">深入理解Python中的ThreadLocal变量（中）</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;参考&quot;&gt;&lt;a href=&quot;#参考&quot; class=&quot;headerlink&quot; title=&quot;参考&quot;&gt;&lt;/a&gt;参考&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://selfboot.cn/2016/08/22/threadlocal_overview/&quot; t
    
    </summary>
    
      <category term="python" scheme="http://yoursite.com/categories/python/"/>
    
    
      <category term="python" scheme="http://yoursite.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>php|php底层运行机制与原理</title>
    <link href="http://yoursite.com/2018/12/04/php-php%E5%BA%95%E5%B1%82%E8%BF%90%E8%A1%8C%E6%9C%BA%E5%88%B6%E4%B8%8E%E5%8E%9F%E7%90%86/"/>
    <id>http://yoursite.com/2018/12/04/php-php底层运行机制与原理/</id>
    <published>2018-12-03T23:14:08.000Z</published>
    <updated>2018-12-03T15:53:25.217Z</updated>
    
    <content type="html"><![CDATA[<h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><ul>
<li><a href="https://www.awaimai.com/509.html" target="_blank" rel="external">PHP底层的运行机制与原理</a></li>
<li><a href="https://www.awaimai.com/371.html" target="_blank" rel="external">CGI、FastCGI和PHP-FPM关系图解</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;参考&quot;&gt;&lt;a href=&quot;#参考&quot; class=&quot;headerlink&quot; title=&quot;参考&quot;&gt;&lt;/a&gt;参考&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.awaimai.com/509.html&quot; target=&quot;_blank&quot; rel=&quot;
    
    </summary>
    
      <category term="php" scheme="http://yoursite.com/categories/php/"/>
    
    
      <category term="php" scheme="http://yoursite.com/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>python|上下文管理器</title>
    <link href="http://yoursite.com/2018/12/01/python-%E4%B8%8A%E4%B8%8B%E6%96%87%E7%AE%A1%E7%90%86%E5%99%A8/"/>
    <id>http://yoursite.com/2018/12/01/python-上下文管理器/</id>
    <published>2018-12-01T12:47:45.000Z</published>
    <updated>2018-12-01T04:48:56.928Z</updated>
    
    <content type="html"><![CDATA[<p>经常在Python代码中看到with语句，仔细分析下，会发现这个with语句功能好强，可以自动关闭资源。这个在Python中叫上下文管理器Context Manager。那我们要怎么用它，什么时候用它呢。这里我们就来聊一聊。</p>
<h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><ul>
<li><a href="http://www.bjhee.com/python-context.html" target="_blank" rel="external">谈一谈Python的上下文管理器</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;经常在Python代码中看到with语句，仔细分析下，会发现这个with语句功能好强，可以自动关闭资源。这个在Python中叫上下文管理器Context Manager。那我们要怎么用它，什么时候用它呢。这里我们就来聊一聊。&lt;/p&gt;
&lt;h3 id=&quot;参考&quot;&gt;&lt;a href=
    
    </summary>
    
      <category term="python" scheme="http://yoursite.com/categories/python/"/>
    
    
      <category term="python" scheme="http://yoursite.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>python|生成器</title>
    <link href="http://yoursite.com/2018/12/01/python-%E7%94%9F%E6%88%90%E5%99%A8/"/>
    <id>http://yoursite.com/2018/12/01/python-生成器/</id>
    <published>2018-12-01T01:12:46.000Z</published>
    <updated>2018-11-30T17:14:46.484Z</updated>
    
    <content type="html"><![CDATA[<h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><ul>
<li><a href="http://www.bjhee.com/python-yield.html" target="_blank" rel="external">谈谈Python的生成器</a></li>
<li></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;参考&quot;&gt;&lt;a href=&quot;#参考&quot; class=&quot;headerlink&quot; title=&quot;参考&quot;&gt;&lt;/a&gt;参考&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.bjhee.com/python-yield.html&quot; target=&quot;_blank&quot;
    
    </summary>
    
      <category term="python" scheme="http://yoursite.com/categories/python/"/>
    
    
      <category term="python" scheme="http://yoursite.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>python|装饰器</title>
    <link href="http://yoursite.com/2018/12/01/python-%E8%A3%85%E9%A5%B0%E5%99%A8/"/>
    <id>http://yoursite.com/2018/12/01/python-装饰器/</id>
    <published>2018-11-30T21:44:59.000Z</published>
    <updated>2018-11-30T16:54:35.043Z</updated>
    
    <content type="html"><![CDATA[<p>本质上，装饰器就是一个返回函数的高阶函数。</p>
<p><strong>装饰器可以动态地修改一个类或函数的功能，通过在原有的类或者函数上包裹一层修饰类或修饰函数实现。</strong></p>
<p>事实上，装饰器就是闭包的一种应用，但它比较特别，<strong>接收被装饰函数为参数，并返回一个函数，赋给被装饰函数</strong>，闭包则没这种限制。</p>
<h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><ul>
<li><a href="http://www.bjhee.com/python-decorator.html" target="_blank" rel="external">Python中的装饰器介绍</a> </li>
<li><a href="https://www.jqhtml.com/11360.html" target="_blank" rel="external">Python 会打扮的装饰器</a></li>
<li><a href="https://coolshell.cn/articles/11265.html" target="_blank" rel="external">PYTHON修饰器的函数式编程</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本质上，装饰器就是一个返回函数的高阶函数。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;装饰器可以动态地修改一个类或函数的功能，通过在原有的类或者函数上包裹一层修饰类或修饰函数实现。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;事实上，装饰器就是闭包的一种应用，但它比较特别，&lt;strong&gt;接收被装
    
    </summary>
    
      <category term="python" scheme="http://yoursite.com/categories/python/"/>
    
    
      <category term="python" scheme="http://yoursite.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>python|celery初体验</title>
    <link href="http://yoursite.com/2018/12/01/python-celery%E5%88%9D%E4%BD%93%E9%AA%8C/"/>
    <id>http://yoursite.com/2018/12/01/python-celery初体验/</id>
    <published>2018-11-30T16:58:50.000Z</published>
    <updated>2018-11-30T11:31:27.628Z</updated>
    
    <content type="html"><![CDATA[<p>Celery是一个专注于实时处理和任务调度的分布式任务队列。所谓任务就是消息，消息中的有效载荷中包含要执行任务需要的全部数据。</p>
<p>使用Celery的常见场景如下：</p>
<ul>
<li>Web应用。当用户触发的一个操作需要较长时间才能执行完成时，可以把它作为任务交给Celery去异步执行，执行完再返回给用户。这段时间用户不需要等待，提高了网站的整体吞吐量和响应时间。</li>
</ul>
<ul>
<li>定时任务。生产环境经常会跑一些定时任务。假如你有上千台的服务器、上千种任务，定时任务的管理很困难，Celery可以帮助我们快速在不同的机器设定不同种任务。</li>
</ul>
<ul>
<li>同步完成的附加工作都可以异步完成。比如发送短信/邮件、推送消息、清理/设置缓存等。</li>
</ul>
<h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><ul>
<li><a href="https://juejin.im/entry/584f5348128fe1006c95a01d" target="_blank" rel="external">异步任务神器 Celery 简明笔记</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/22304455" target="_blank" rel="external">使用Celery</a></li>
<li><a href="http://www.bjhee.com/celery.html" target="_blank" rel="external">分布式任务队列Celery的介绍</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Celery是一个专注于实时处理和任务调度的分布式任务队列。所谓任务就是消息，消息中的有效载荷中包含要执行任务需要的全部数据。&lt;/p&gt;
&lt;p&gt;使用Celery的常见场景如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Web应用。当用户触发的一个操作需要较长时间才能执行完成时，可以把它作为
    
    </summary>
    
      <category term="python" scheme="http://yoursite.com/categories/python/"/>
    
    
      <category term="python" scheme="http://yoursite.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>Mysql|索引相关</title>
    <link href="http://yoursite.com/2018/11/23/Mysql-%E7%B4%A2%E5%BC%95%E7%9B%B8%E5%85%B3/"/>
    <id>http://yoursite.com/2018/11/23/Mysql-索引相关/</id>
    <published>2018-11-23T00:35:16.000Z</published>
    <updated>2018-11-23T11:18:58.268Z</updated>
    
    <content type="html"><![CDATA[<h3 id="B树"><a href="#B树" class="headerlink" title="B树"></a>B树</h3><ul>
<li><a href="http://www.ligen.pro/2018/02/09/%E4%BD%BF%E7%94%A8B-%E6%A0%91%E5%AE%9E%E7%8E%B0%E7%B4%A2%E5%BC%95/" target="_blank" rel="external">使用B+树实现索引</a></li>
<li><a href="https://www.cnblogs.com/nullzx/p/8729425.html" target="_blank" rel="external">B树和B+树的插入、删除图文详解</a></li>
<li><a href="https://www.jianshu.com/p/1f2560f0e87f" target="_blank" rel="external">漫画算法：什么是 B+ 树？</a></li>
<li><a href="http://blog.codinglabs.org/articles/theory-of-mysql-index.html" target="_blank" rel="external">MySQL索引背后的数据结构及算法原理</a></li>
</ul>
<h3 id="索引直观图"><a href="#索引直观图" class="headerlink" title="索引直观图"></a>索引直观图</h3><h4 id="MyISAM"><a href="#MyISAM" class="headerlink" title="MyISAM"></a>MyISAM</h4><p>MyISAM引擎使用B+Tree作为索引结构，叶节点的data域存放的是数据记录的地址。</p>
<p><img src="../images/Mysql_index-0.png" alt="MyISAM索引实现"></p>
<p>在MyISAM中，主索引和辅助索引（Secondary key）在结构上没有任何区别，只是主索引要求key是唯一的，而辅助索引的key可以重复。如果我们在Col2上建立一个辅助索引，则此索引的结构如下图所示：</p>
<p><img src="../images/Mysql_index-1.png" alt="MyISAM索引实现"></p>
<p>同样也是一颗B+Tree，data域保存数据记录的地址。因此，MyISAM中索引检索的算法为首先按照B+Tree搜索算法搜索索引，如果指定的Key存在，则取出其data域的值，然后以data域的值为地址，读取相应数据记录。</p>
<p>MyISAM的索引方式也叫做“非聚集”的，之所以这么称呼是为了与InnoDB的聚集索引区分。</p>
<h4 id="InnoDB"><a href="#InnoDB" class="headerlink" title="InnoDB"></a>InnoDB</h4><p>虽然InnoDB也使用B+Tree作为索引结构，但具体实现方式却与MyISAM截然不同。</p>
<p>第一个重大区别是InnoDB的数据文件本身就是索引文件。从上文知道，MyISAM索引文件和数据文件是分离的，索引文件仅保存数据记录的地址。而在InnoDB中，表数据文件本身就是按B+Tree组织的一个索引结构，这棵树的叶节点data域保存了完整的数据记录。这个索引的key是数据表的主键，因此InnoDB表数据文件本身就是主索引。</p>
<p><img src="../images/Mysql_index-2.png" alt="InnoDB索引实现"></p>
<p>可以看到叶节点包含了完整的数据记录。这种索引叫做聚集索引。因为InnoDB的数据文件本身要按主键聚集，所以InnoDB要求表必须有主键（MyISAM可以没有），如果没有显式指定，则MySQL系统会自动选择一个可以唯一标识数据记录的列作为主键，如果不存在这种列，则MySQL自动为InnoDB表生成一个隐含字段作为主键，这个字段长度为6个字节，类型为长整形。</p>
<p>第二个与MyISAM索引的不同是InnoDB的辅助索引data域存储相应记录主键的值而不是地址。换句话说，InnoDB的所有辅助索引都引用主键作为data域。例如，下图为定义在Col3上的一个辅助索引：</p>
<p><img src="../images/Mysql_index-3.png" alt="InnoDB索引实现"></p>
<p>这里以英文字符的ASCII码作为比较准则。聚集索引这种实现方式使得按主键的搜索十分高效，但是辅助索引搜索需要检索两遍索引：首先检索辅助索引获得主键，然后用主键到主索引中检索获得记录。</p>
<p>了解不同存储引擎的索引实现方式对于正确使用和优化索引都非常有帮助，例如知道了InnoDB的索引实现后，就很容易明白为什么不建议使用过长的字段作为主键，因为所有辅助索引都引用主索引，过长的主索引会令辅助索引变得过大。再例如，用非单调的字段作为主键在InnoDB中不是个好主意，因为InnoDB数据文件本身是一颗B+Tree，非单调的主键会造成在插入新记录时数据文件为了维持B+Tree的特性而频繁的分裂调整，十分低效，而使用自增字段作为主键则是一个很好的选择</p>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;B树&quot;&gt;&lt;a href=&quot;#B树&quot; class=&quot;headerlink&quot; title=&quot;B树&quot;&gt;&lt;/a&gt;B树&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.ligen.pro/2018/02/09/%E4%BD%BF%E7%94%A8B-%E6
    
    </summary>
    
      <category term="Mysql" scheme="http://yoursite.com/categories/Mysql/"/>
    
    
      <category term="Mysql" scheme="http://yoursite.com/tags/Mysql/"/>
    
  </entry>
  
  <entry>
    <title>MySQL|事务隔离</title>
    <link href="http://yoursite.com/2018/11/17/MySQL-%E4%BA%8B%E5%8A%A1%E9%9A%94%E7%A6%BB/"/>
    <id>http://yoursite.com/2018/11/17/MySQL-事务隔离/</id>
    <published>2018-11-17T10:12:24.000Z</published>
    <updated>2018-11-17T02:13:13.607Z</updated>
    
    <content type="html"><![CDATA[<h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><ul>
<li><a href="https://mp.weixin.qq.com/s?__biz=MzIwMDgzMjc3NA==&amp;mid=2247484080&amp;idx=1&amp;sn=fa036a0ee760815fe291f6023ae4cc15&amp;chksm=96f660d9a181e9cf6c91512ef0c3e1e1aa329100ed4545b26def09cb75c862bcfb912460822b&amp;scene=7&amp;ascene=0&amp;devicetype=android-24&amp;version=26060739&amp;nettype=WIFI&amp;abtest_cookie=BQABAAoACwANABMAFAAFACaXHgBZmR4AhpkeAIqZHgCLmR4AAAA%3D&amp;lang=zh_CN&amp;pass_ticket=i1%2BQy5AH1ve6XlrsmC0FwSdK%2FTBzbUlAIW%2FEDW82PGjVsj1zCNJgu%2F0qKf0J1gtK&amp;wx_header=1" target="_blank" rel="external">新说Mysql事务隔离级别！</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;参考&quot;&gt;&lt;a href=&quot;#参考&quot; class=&quot;headerlink&quot; title=&quot;参考&quot;&gt;&lt;/a&gt;参考&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=MzIwMDgzMjc3NA==&amp;amp;m
    
    </summary>
    
      <category term="MySQL" scheme="http://yoursite.com/categories/MySQL/"/>
    
    
      <category term="MySQL" scheme="http://yoursite.com/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>UML|UML学习记录</title>
    <link href="http://yoursite.com/2018/11/11/UML-UML%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/"/>
    <id>http://yoursite.com/2018/11/11/UML-UML学习记录/</id>
    <published>2018-11-10T21:57:37.000Z</published>
    <updated>2018-11-10T14:34:11.883Z</updated>
    
    <content type="html"><![CDATA[<h3 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h3><ul>
<li><a href="http://ifeve.com/uml-intro/" target="_blank" rel="external">UML建模图实战笔记</a></li>
<li></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;参考资料&quot;&gt;&lt;a href=&quot;#参考资料&quot; class=&quot;headerlink&quot; title=&quot;参考资料&quot;&gt;&lt;/a&gt;参考资料&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://ifeve.com/uml-intro/&quot; target=&quot;_blank&quot; re
    
    </summary>
    
      <category term="UML" scheme="http://yoursite.com/categories/UML/"/>
    
    
      <category term="UML" scheme="http://yoursite.com/tags/UML/"/>
    
  </entry>
  
  <entry>
    <title>Java|spring-boot学习记录</title>
    <link href="http://yoursite.com/2018/11/10/Java-spring-boot%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/"/>
    <id>http://yoursite.com/2018/11/10/Java-spring-boot学习记录/</id>
    <published>2018-11-10T00:26:16.000Z</published>
    <updated>2018-11-13T12:03:55.779Z</updated>
    
    <content type="html"><![CDATA[<h3 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h3><ul>
<li>部署<ul>
<li><code>https://www.howtoforge.com/tutorial/centos-apache-maven/</code></li>
<li><code>https://linuxize.com/post/install-java-on-centos-7/</code></li>
<li><code>https://www.linode.com/docs/development/java/how-to-deploy-spring-boot-applications-nginx-ubuntu-16-04/</code></li>
</ul>
</li>
<li>数据库-ORM<ul>
<li><a href="http://www.spring4all.com/article/500" target="_blank" rel="external">Spring Data JPA 从入门到进阶系列教程</a></li>
<li><a href="https://www.cnblogs.com/chenpi/p/6357527.html" target="_blank" rel="external">Spring Data JPA例子[基于Spring Boot、Mysql]</a></li>
<li><a href="https://blog.csdn.net/u012702547/article/details/53946440" target="_blank" rel="external">初识在Spring Boot中使用JPA</a></li>
<li><a href="http://westerly-lzh.github.io/cn/2014/12/JPA-CascadeType-Explaining/" target="_blank" rel="external">Jpa CascadeType 详解</a></li>
<li><a href="https://hellokoding.com/jpa-one-to-many-relationship-mapping-example-with-spring-boot-maven-and-mysql/" target="_blank" rel="external">Jpa Mapping</a></li>
<li><a href="https://github.com/longfeizheng/jpa-example" target="_blank" rel="external">Github-jpa-example</a></li>
</ul>
</li>
<li><p>项目demo</p>
<ul>
<li><code>https://github.com/aidansu/spring-boot-jpa</code></li>
</ul>
</li>
<li><p>Spring-Boot</p>
<ul>
<li><a href="http://zetcode.com/springboot/responsebody/" target="_blank" rel="external">Spring Boot注解</a></li>
<li><a href="https://mrbird.cc/Spring-Boot%20JSON.html" target="_blank" rel="external">Spring Boot中的JSON技术</a></li>
</ul>
</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;参考资料&quot;&gt;&lt;a href=&quot;#参考资料&quot; class=&quot;headerlink&quot; title=&quot;参考资料&quot;&gt;&lt;/a&gt;参考资料&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;部署&lt;ul&gt;
&lt;li&gt;&lt;code&gt;https://www.howtoforge.com/tutorial/cen
    
    </summary>
    
      <category term="Java" scheme="http://yoursite.com/categories/Java/"/>
    
    
      <category term="Java" scheme="http://yoursite.com/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>Mysql|性能优化化</title>
    <link href="http://yoursite.com/2018/11/01/mysql-%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96/"/>
    <id>http://yoursite.com/2018/11/01/mysql-性能优化/</id>
    <published>2018-10-31T17:14:18.000Z</published>
    <updated>2018-10-31T16:00:16.119Z</updated>
    
    <content type="html"><![CDATA[<h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><ul>
<li><a href="https://segmentfault.com/a/1190000008131735" target="_blank" rel="external">MySQL 性能优化神器 Explain 使用分析</a></li>
<li><a href="http://www.ywnds.com/?p=5202" target="_blank" rel="external">MySQL执行计划详解（EXPLAIN）</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;参考&quot;&gt;&lt;a href=&quot;#参考&quot; class=&quot;headerlink&quot; title=&quot;参考&quot;&gt;&lt;/a&gt;参考&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://segmentfault.com/a/1190000008131735&quot; target=&quot;_b
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Mysql|性能优化化</title>
    <link href="http://yoursite.com/2018/11/01/Mysql-%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E5%8C%96/"/>
    <id>http://yoursite.com/2018/11/01/Mysql-性能优化化/</id>
    <published>2018-10-31T17:14:18.000Z</published>
    <updated>2018-10-31T10:42:55.320Z</updated>
    
    <content type="html"><![CDATA[<h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><ul>
<li><a href="https://segmentfault.com/a/1190000008131735" target="_blank" rel="external">MySQL 性能优化神器 Explain 使用分析</a></li>
<li><a href="http://www.ywnds.com/?p=5202" target="_blank" rel="external">MySQL执行计划详解（EXPLAIN）</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;参考&quot;&gt;&lt;a href=&quot;#参考&quot; class=&quot;headerlink&quot; title=&quot;参考&quot;&gt;&lt;/a&gt;参考&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://segmentfault.com/a/1190000008131735&quot; target=&quot;_b
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Mysql|Mysql存储过程入门</title>
    <link href="http://yoursite.com/2018/10/27/Mysql-Mysql%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B%E5%85%A5%E9%97%A8/"/>
    <id>http://yoursite.com/2018/10/27/Mysql-Mysql存储过程入门/</id>
    <published>2018-10-27T13:42:01.000Z</published>
    <updated>2018-10-27T05:45:16.727Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://segmentfault.com/a/1190000009058579" target="_blank" rel="external">MySQL存储过程暴力入门手记</a><br><a href="https://juejin.im/post/587f58bd8d6d810058e4eec2" target="_blank" rel="external">mysql 中的存储过程和自定义函数</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://segmentfault.com/a/1190000009058579&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;MySQL存储过程暴力入门手记&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://juejin.im/po
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Navicat基本使用.md</title>
    <link href="http://yoursite.com/2018/10/26/Navicat%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8-md/"/>
    <id>http://yoursite.com/2018/10/26/Navicat基本使用-md/</id>
    <published>2018-10-25T17:32:17.000Z</published>
    <updated>2018-10-25T15:04:35.803Z</updated>
    
    <content type="html"><![CDATA[<h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p>自己之前就安装过了，也使用了好久，现在有使用很多账号、连接管理，由于之前没做好这些账号信息的记录，重装后得再去找这些账号的信息就比较麻烦，就不卸载重装了，请老师能理解。</p>
<h1 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h1><ul>
<li>新建连接</li>
</ul>
<p><img src="/images/navicat-01.png" alt=""></p>
<p>选择需要连接的数据库类型，这里选择MySQL。</p>
<ul>
<li>填写连接信息，如ip，端口，用户名，密码</li>
</ul>
<p><img src="/images/navicat-02.png" alt=""></p>
<ul>
<li>登录成功后就能看到该用户权限下的数据库，如下图：</li>
</ul>
<p><img src="/images/navicat-03.png" alt=""></p>
<p>连接成功后，通过右键连接名，我们可以新建数据库，点击出现下图：</p>
<p><img src="/images/navicat-04.png" alt=""></p>
<p>在这里，我们新建一个名为lab的数据库。需要提醒一下，新建数据库的时候，要<strong>注意选择正确的编码，如果我们要存中文，需要选择支持中文的编码格式，这里选择utf-8</strong>。</p>
<p>然后我们就能在列表下看到新建的数据库 lab:</p>
<p><img src="/images/navicat-05.png" alt=""></p>
<p>通过右键数据库，我们会看到有新建表、删除表、转储数据库表结构或结构与数据的功能，新建表、删除表提供一种<strong>图形化的界面</strong>给我们新建数据库表，对于简单的表结构，通过这种图形化的界面来新建表是很方便的，不过如果表结构过于复杂，还是建议使用sql脚本来新建表；转储数据库表结构或结构与数据是常用的功能，可以方便我们的数据库备份或迁移。</p>
<h2 id="图形化建表"><a href="#图形化建表" class="headerlink" title="图形化建表"></a>图形化建表</h2><p>在这里，我们简单新建一个用户表，属性有<code>id</code>，<code>name</code>,<code>password</code>:</p>
<p><img src="/images/navicat-06.png" alt=""></p>
<p>可以看到，我们能选择字段的类型、设置主键、外键、是否为空、编码，这些都是我们在建表的时候需要考虑的因素，navicat通过图形化的方式让我们方便选择。</p>
<h3 id="操作数据"><a href="#操作数据" class="headerlink" title="操作数据"></a>操作数据</h3><p>点击左下角的<code>+</code>，就能在数据表中添加数据；选中想要删除的记录，右键，就会出现删除的选项；直接编辑表中的记录，<code>Ctrl+s</code>就能保存修改。</p>
<p><img src="/images/navicat-07.png" alt=""></p>
<h2 id="导出sql脚本"><a href="#导出sql脚本" class="headerlink" title="导出sql脚本"></a>导出<code>sql</code>脚本</h2><p>通过右键想要导出的数据库名，选择转储sql文件，选择只到数据库结构或者结构与数据，就能导出当前的数据库脚本。下图是导出的sql脚本文件：</p>
<p><img src="/images/navicat-08.png" alt=""></p>
<h2 id="sql脚本操作"><a href="#sql脚本操作" class="headerlink" title="sql脚本操作"></a>sql脚本操作</h2><p>同样，在navicat中同样也有命令行桌面，右键数据库，选择命令行界面，就能出现命令行界面，如下图：</p>
<p><img src="/images/navicat-09.png" alt=""></p>
<h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>Navicat是一个数据库管理工具，是一个连接用户与数据库服务器的媒介。通过navicat，我们可以通过图形化的界面来与数据库服务器通信并执行命令，同时也可以通过命令行窗口，通过<code>sql</code>脚本执行命令。同时，还有很多功能我们可以使用，比如说数据库备份、视图的编写等功能。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;安装&quot;&gt;&lt;a href=&quot;#安装&quot; class=&quot;headerlink&quot; title=&quot;安装&quot;&gt;&lt;/a&gt;安装&lt;/h1&gt;&lt;p&gt;自己之前就安装过了，也使用了好久，现在有使用很多账号、连接管理，由于之前没做好这些账号信息的记录，重装后得再去找这些账号的信息就比较麻烦，就
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>python|Flask+uWSGI+Nginx+Ubuntu部署教程</title>
    <link href="http://yoursite.com/2018/10/19/python-Flask-uWSGI-Nginx-Ubuntu%E9%83%A8%E7%BD%B2%E6%95%99%E7%A8%8B/"/>
    <id>http://yoursite.com/2018/10/19/python-Flask-uWSGI-Nginx-Ubuntu部署教程/</id>
    <published>2018-10-19T14:31:37.000Z</published>
    <updated>2018-10-19T12:38:15.956Z</updated>
    
    <content type="html"><![CDATA[<h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><ul>
<li>转:<a href="https://www.linuxidc.com/Linux/2016-06/132690.htm" target="_blank" rel="external">Flask+uWSGI+Nginx+Ubuntu部署教程</a></li>
<li>转：<a href="https://www.itread01.com/articles/1475898630.html" target="_blank" rel="external">Flask+uWSGI+Nginx+Ubuntu部署教程</a></li>
<li>转：<a href="http://www.bjhee.com/nginx-uwsgi.html" target="_blank" rel="external">使用Nginx和uWSGI来运行Python应用</a></li>
<li>转:<a href="https://uwsgi-docs-cn.readthedocs.io/zh_CN/latest/WSGIquickstart.html" target="_blank" rel="external">Python/WSGI 应用快速入门</a></li>
<li></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;参考&quot;&gt;&lt;a href=&quot;#参考&quot; class=&quot;headerlink&quot; title=&quot;参考&quot;&gt;&lt;/a&gt;参考&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;转:&lt;a href=&quot;https://www.linuxidc.com/Linux/2016-06/132690.htm&quot; ta
    
    </summary>
    
      <category term="python" scheme="http://yoursite.com/categories/python/"/>
    
    
      <category term="python" scheme="http://yoursite.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>python|python正则表达式</title>
    <link href="http://yoursite.com/2018/10/18/python-python%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
    <id>http://yoursite.com/2018/10/18/python-python正则表达式/</id>
    <published>2018-10-17T23:57:33.000Z</published>
    <updated>2018-10-17T16:38:12.180Z</updated>
    
    <content type="html"><![CDATA[<h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><ul>
<li>转:<a href="https://www.liaoxuefeng.com/wiki/001374738125095c955c1e6d8bb493182103fac9270762a000/001386832260566c26442c671fa489ebc6fe85badda25cd000" target="_blank" rel="external">廖雪峰的官方网站|正则表达式</a></li>
<li>转:<a href="https://cuiqingcai.com/5530.html" target="_blank" rel="external">Python3网络爬虫开发实战</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;参考&quot;&gt;&lt;a href=&quot;#参考&quot; class=&quot;headerlink&quot; title=&quot;参考&quot;&gt;&lt;/a&gt;参考&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;转:&lt;a href=&quot;https://www.liaoxuefeng.com/wiki/001374738125095c955c
    
    </summary>
    
      <category term="python" scheme="http://yoursite.com/categories/python/"/>
    
    
      <category term="python" scheme="http://yoursite.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>python|flask简单用</title>
    <link href="http://yoursite.com/2018/10/17/python-flask%E7%AE%80%E5%8D%95%E7%94%A8/"/>
    <id>http://yoursite.com/2018/10/17/python-flask简单用/</id>
    <published>2018-10-16T23:56:41.000Z</published>
    <updated>2018-11-30T11:51:50.605Z</updated>
    
    <content type="html"><![CDATA[<h3 id="about-flask"><a href="#about-flask" class="headerlink" title="about flask"></a>about flask</h3><ul>
<li><a href="http://www.bjhee.com/flask-ext1.html" target="_blank" rel="external">Flask扩展系列</a></li>
</ul>
<h3 id="nginx-Gunicorn部署Flask项目"><a href="#nginx-Gunicorn部署Flask项目" class="headerlink" title="nginx+Gunicorn部署Flask项目"></a>nginx+Gunicorn部署Flask项目</h3><p><a href="https://juejin.im/post/5a5c1825f265da3e3e33bf70" target="_blank" rel="external">部署</a></p>
<h3 id="flask-sqlalchemy"><a href="#flask-sqlalchemy" class="headerlink" title="flask-sqlalchemy"></a>flask-sqlalchemy</h3><ul>
<li><a href="https://wing324.github.io/2017/02/25/%E4%BD%BF%E7%94%A8flask-sqlalchemy%E7%8E%A9%E8%BD%ACMySQL/" target="_blank" rel="external">使用flask-sqlalchemy玩转MySQL</a></li>
<li><a href="https://www.cnblogs.com/franknihao/p/7268752.html" target="_blank" rel="external">【Python】 SQLAlchemy的初步使用</a></li>
</ul>
<h3 id="文档"><a href="#文档" class="headerlink" title="文档"></a>文档</h3><ul>
<li><a href="http://docs.jinkan.org/docs/flask/index.html" target="_blank" rel="external">中文文档</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;about-flask&quot;&gt;&lt;a href=&quot;#about-flask&quot; class=&quot;headerlink&quot; title=&quot;about flask&quot;&gt;&lt;/a&gt;about flask&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.bjhee.co
    
    </summary>
    
      <category term="python" scheme="http://yoursite.com/categories/python/"/>
    
    
      <category term="python" scheme="http://yoursite.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>python|pytest单元测试</title>
    <link href="http://yoursite.com/2018/10/17/python-pytest%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95/"/>
    <id>http://yoursite.com/2018/10/17/python-pytest单元测试/</id>
    <published>2018-10-16T23:54:37.000Z</published>
    <updated>2018-10-16T16:40:39.666Z</updated>
    
    <content type="html"><![CDATA[<h3 id="pytest的fixture"><a href="#pytest的fixture" class="headerlink" title="pytest的fixture"></a>pytest的fixture</h3><ul>
<li>将fixture作为函数参数</li>
<li><p>使用fixture的依赖注入</p>
</li>
<li><p>转:<a href="https://blog.csdn.net/hekaiyou/article/details/79242391" target="_blank" rel="external">pytest的fixture</a></p>
</li>
<li>转:<a href="https://www.jianshu.com/p/552c3f1e9946" target="_blank" rel="external">Pytest - 进阶功能fixture</a></li>
<li>转:<a href="http://www.testclass.net/pytest/parametrize_fixture/" target="_blank" rel="external">参数化的Fixture</a></li>
</ul>
<h3 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h3><ul>
<li>转:<a href="http://ningning.today/2016/11/22/python/flask-unittest/" target="_blank" rel="external">flask项目单元测试实践</a></li>
<li>转:<a href="http://ningning.today/2016/08/27/python/python%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95/" target="_blank" rel="external">python单元测试</a></li>
<li>转:<a href="http://www.testclass.net/tags/pytest/" target="_blank" rel="external">pytest系列教程</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;pytest的fixture&quot;&gt;&lt;a href=&quot;#pytest的fixture&quot; class=&quot;headerlink&quot; title=&quot;pytest的fixture&quot;&gt;&lt;/a&gt;pytest的fixture&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;将fixture作为函数参数&lt;/
    
    </summary>
    
      <category term="python" scheme="http://yoursite.com/categories/python/"/>
    
    
      <category term="python" scheme="http://yoursite.com/tags/python/"/>
    
  </entry>
  
</feed>
